plugins {
    id 'groovy'
    id 'dev.nokee.cpp-language'
    id 'gradlebuild.jni-nokee'
}

nativeVersion {
    versionClassPackageName = "net.rubygrapefruit.platform.internal.jni"
    versionClassName = "FileEventsVersion"
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    implementation project(':native-platform')
    testImplementation testFixtures(project(":native-platform"))
}

javadoc {
    exclude '**/internal/**'
}

library {
    baseName = 'native-platform-file-events'
    cppSources.setFrom('src/file-events/cpp')
    privateHeaders.setFrom('src/file-events/headers')
    tasks.configureEach(CppCompile) {
        compilerArgs.addAll(targetPlatform.map {
            if (it.operatingSystem.macOsX
                || it.operatingSystem.linux) {
                [
                    "-g",                       // Produce debug output
                    "-pthread",                 // Force nicer threading
                    "-pedantic",                // Disable non-standard things
                    "--std=c++11",              // Enable C++11
                    "-Wall",                    // All warnings
                    "-Wextra",                  // Plus extra
                    "-Wformat=2",               // Check printf format strings
                    "-Werror",                  // Warnings are errors
                    "-Wno-format-nonliteral",   // Allow printf to have dynamic format string
                    "-Wno-unguarded-availability-new", // Newly introduced flags are not available on older macOS versions
                ]
            } else if (it.operatingSystem.windows) {
                [
                    "/DEBUG",                   // Produce debug output
                    "/std:c++17",               // Won't hurt
                    "/permissive-",             // Make compiler more standards compatible
                    "/EHsc",                    // Force exception handling mode
                    "/Zi",                      // Force PDB debugging
                    "/FS",                      // Force synchronous PDB writes
                    "/Zc:inline",               // Hack
                    "/Zc:throwingNew",          // Assume new throws on error
                    "/W3",                      // Enable lots of warnings, disbale individual warnings with /WD<NUM>
                    "/WX",                      // Warnings are errors
                    "/D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING",
                                                // Don't issue warnings for wstring_convert in generic_fsnotifier.cpp
                ]
            } else {
                []
            }
        })
    }
    tasks.configureEach(LinkSharedLibrary) {
        linkerArgs.addAll(targetPlatform.map {
            if (it.operatingSystem.macOsX
                || it.operatingSystem.linux) {
                ["-pthread"]
            } else if (it.operatingSystem.windows) {
                ["/DEBUG:FULL"]                   // Generate all PDBs
            } else {
                []
            }
        })
    }
}
