plugins {
    id 'groovy'
    id 'java-test-fixtures'
    id 'dev.nokee.cpp-language'
    id 'gradlebuild.jni-nokee'
//    id 'gradlebuild.freebsd'
//    id 'gradlebuild.ncurses'
}

import dev.nokee.language.cpp.CppSourceSet

nativeVersion {
    versionClassPackageName = "net.rubygrapefruit.platform.internal.jni"
    versionClassName = "NativeVersion"
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

javadoc {
    exclude '**/internal/**'
}

library {
    baseName = 'native-platform'
    sources.configureEach(CppSourceSet) {
        source.from('src/shared/cpp', 'src/main/cpp')
        headers.from('src/shared/headers', 'build/generated/jni-headers/main')
        headers.from(sources.java.flatMap { it.compileTask }.flatMap { it.options.headerOutputDirectory })
    }
}

//model {
//    components {
//        nativePlatform(NativeLibrarySpec) {
//            baseName 'native-platform'
//            $.platforms.each { p ->
//                if (p.name.contains("ncurses")) {
//                    return
//                }
//                targetPlatform p.name
//            }
//            sources {
//                cpp {
//                    source.srcDirs = ['src/shared/cpp', 'src/main/cpp']
//                    exportedHeaders.srcDirs = ['src/shared/headers']
//                }
//            }
//        }
//
//        nativePlatformCurses(NativeLibrarySpec) {
//            baseName 'native-platform-curses'
//            $.platforms.each { p ->
//                if (p.operatingSystem.windows) {
//                    return
//                }
//                if (p.operatingSystem.linux && !p.name.contains("ncurses")) {
//                    return
//                }
//                targetPlatform p.name
//            }
//            sources {
//                cpp {
//                    source.srcDirs = ['src/shared/cpp', 'src/curses/cpp']
//                    exportedHeaders.srcDirs = ['src/shared/headers']
//                }
//            }
//        }
//    }
//}
