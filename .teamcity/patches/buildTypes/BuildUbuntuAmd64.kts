package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.CommitStatusPublisher
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.commitStatusPublisher
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'BuildUbuntuAmd64'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("BuildUbuntuAmd64")) {
    check(artifactRules == """
        hs_err*
        **/build/**/output.txt
        build/repo => repo
        native-platform/build/reports/** => native-platform/reports
        file-events/build/reports/** => file-events/reports
        buildSrc/build/reports/** => buildSrc/reports
        test-app/build/reports/** => test-app/reports
        build-receipt.properties
    """.trimIndent()) {
        "Unexpected option value: artifactRules = $artifactRules"
    }
    artifactRules = """
        hs_err*
        **/build/**/output.txt
        **/build/**/options.txt
        build/repo => repo
        native-platform/build/reports/** => native-platform/reports
        file-events/build/reports/** => file-events/reports
        buildSrc/build/reports/** => buildSrc/reports
        test-app/build/reports/** => test-app/reports
        build-receipt.properties
    """.trimIndent()

    features {
        val feature1 = find<CommitStatusPublisher> {
            commitStatusPublisher {
                vcsRootExtId = "${DslContext.settingsRoot.id}"
                publisher = github {
                    githubUrl = "https://api.github.com"
                    authType = personalToken {
                        token = "%github.bot-teamcity.token%"
                    }
                }
            }
        }
        feature1.apply {
            publisher = github {
                githubUrl = "https://api.github.com"
                authType = personalToken {
                    token = "credentialsJSON:ecc6ec89-b940-4699-a466-cec87f0285da"
                }
            }
        }
    }
}
